from typing import Dict, List, Optional, Protocol

class IStorageProvider(Protocol):
    def create_run(self, cfg: Dict) -> str: ...
    def update_run_state(self, run_id: str, state: str, extra: Optional[Dict] = None): ...
    def append_metric(self, run_id: str, step: int, metrics: Dict): ...
    def register_checkpoint(self, run_id: str, step: int, path: str, meta: Optional[Dict] = None): ...
    def get_run(self, run_id: str) -> Dict: ...
    def list_runs(self, filters: Optional[Dict] = None) -> List[Dict]: ...
    def patch_config(self, run_id: str, patch: Dict): ...
